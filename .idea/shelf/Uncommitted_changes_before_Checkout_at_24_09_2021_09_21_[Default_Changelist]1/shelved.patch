Index: src/components/clubs/ClubLogin.jsx
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>import React, {Component} from \"react\";\r\nimport AuthenticationService from \"../../api/services/AuthenticationService\";\r\nimport ClubsDataService from \"../../api/services/ClubsDataService\";\r\n\r\nclass ClubLogin extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            clubname: '',\r\n            password: '',\r\n            hasLoginFailed: false,\r\n            showSuccessMessage: false\r\n        }\r\n\r\n        this.handleChange = this.handleChange.bind(this);\r\n        this.loginClicked = this.loginClicked.bind(this);\r\n        this.refreshClubs = this.refreshClubs.bind(this);\r\n    }\r\n\r\n    // componentDidMount() {\r\n    //     this.refreshClubs()\r\n    // }\r\n    //\r\n    // refreshClubs() {\r\n    //     let clubName = this.state.clubUsername\r\n    //     ClubsDataService.retrieveClub(clubName)\r\n    //         .then(\r\n    //             response => {\r\n    //                 console.log(response)\r\n    //                 this.setState({\r\n    //                     id : response.data.id,\r\n    //                     clubUsername: response.data.clubUsername,\r\n    //                     password: response.data.password,\r\n    //                     city: response.data.city,\r\n    //                     country: response.data.country,\r\n    //                     address: response.data.address,\r\n    //                     email: response.data.email,\r\n    //                     site: response.data.site,\r\n    //                     phoneNumber: response.data.phoneNumber\r\n    //                 })\r\n    //             }\r\n    //         )\r\n    // }\r\n\r\n    loginClicked() {\r\n        //All In, 1234\r\n        if ((this.state.clubname==='AllIn' || this.state.clubname==='PokerStars' ||\r\n            this.state.clubname==='PokerRoom' || this.state.clubname==='AllStars' ||\r\n            this.state.clubname==='NewPokerClub') && this.state.password==='1234') {\r\n            console.log('Successful')\r\n            AuthenticationService.registerClubSuccessfulLogin(this.state.clubname, this.state.password);\r\n            this.props.history.push(`/welcome/${this.state.clubname}`)\r\n        }else{\r\n            console.log('Failed');\r\n            this.setState({showSuccessMessage: false})\r\n            this.setState({hasLoginFailed: true})\r\n        }\r\n        console.log(this.state);\r\n    }\r\n\r\n    handleChange(event) {\r\n        console.log(event.target.name);\r\n        this.setState(\r\n            {\r\n                [event.target.name]: event.target.value\r\n            }\r\n        )\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"container content-box\">\r\n                <h3>Club Login</h3>\r\n                {this.state.hasLoginFailed && <div className=\"alert alert-warning\">\r\n                    Invalid Credentials</div>}\r\n                &nbsp;\r\n                <form>\r\n                    <label>Club Name: </label>\r\n                        <input type=\"text\"\r\n                               name=\"clubname\"\r\n                               value={this.state.clubname}\r\n                               onChange={this.handleChange}\r\n                        />\r\n                    <label>Password: </label>\r\n                        <input type=\"password\"\r\n                               name=\"password\"\r\n                               value={this.state.password}\r\n                               onChange={this.handleChange}\r\n                        />\r\n                    <button className=\"btn btn-success\"\r\n                            onClick={this.loginClicked}>\r\n                        Login\r\n                    </button>\r\n                </form>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default ClubLogin
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/components/clubs/ClubLogin.jsx b/src/components/clubs/ClubLogin.jsx
--- a/src/components/clubs/ClubLogin.jsx	
+++ b/src/components/clubs/ClubLogin.jsx	
@@ -1,13 +1,14 @@
 import React, {Component} from "react";
 import AuthenticationService from "../../api/services/AuthenticationService";
 import ClubsDataService from "../../api/services/ClubsDataService";
+import AuthenticationServiceJwt from "../../api/services/AuthenticationServiceJwt";
 
 class ClubLogin extends Component {
     constructor(props) {
         super(props);
 
         this.state = {
-            clubname: '',
+            clubUsername: '',
             password: '',
             hasLoginFailed: false,
             showSuccessMessage: false
@@ -18,46 +19,63 @@
         this.refreshClubs = this.refreshClubs.bind(this);
     }
 
-    // componentDidMount() {
-    //     this.refreshClubs()
-    // }
-    //
-    // refreshClubs() {
-    //     let clubName = this.state.clubUsername
-    //     ClubsDataService.retrieveClub(clubName)
-    //         .then(
-    //             response => {
-    //                 console.log(response)
-    //                 this.setState({
-    //                     id : response.data.id,
-    //                     clubUsername: response.data.clubUsername,
-    //                     password: response.data.password,
-    //                     city: response.data.city,
-    //                     country: response.data.country,
-    //                     address: response.data.address,
-    //                     email: response.data.email,
-    //                     site: response.data.site,
-    //                     phoneNumber: response.data.phoneNumber
-    //                 })
-    //             }
-    //         )
-    // }
+    componentDidMount() {
+        this.refreshClubs()
+    }
+
+    refreshClubs() {
+        let clubName = this.state.clubUsername
+        ClubsDataService.retrieveClub(clubName)
+            .then(
+                response => {
+                    console.log(response)
+                    this.setState({
+                        id : response.data.id,
+                        clubUsername: response.data.clubUsername,
+                        password: response.data.password,
+                        city: response.data.city,
+                        country: response.data.country,
+                        address: response.data.address,
+                        email: response.data.email,
+                        site: response.data.site,
+                        phoneNumber: response.data.phoneNumber
+                    })
+                }
+            )
+    }
 
     loginClicked() {
-        //All In, 1234
-        if ((this.state.clubname==='AllIn' || this.state.clubname==='PokerStars' ||
-            this.state.clubname==='PokerRoom' || this.state.clubname==='AllStars' ||
-            this.state.clubname==='NewPokerClub') && this.state.password==='1234') {
+    //     //All In, 1234
+    //     if ((this.state.clubname==='AllIn' || this.state.clubname==='PokerStars' ||
+    //         this.state.clubname==='PokerRoom' || this.state.clubname==='AllStars' ||
+    //         this.state.clubname==='NewPokerClub') && this.state.password==='1234') {
             console.log('Successful')
             AuthenticationService.registerClubSuccessfulLogin(this.state.clubname, this.state.password);
             this.props.history.push(`/welcome/${this.state.clubname}`)
-        }else{
-            console.log('Failed');
-            this.setState({showSuccessMessage: false})
-            this.setState({hasLoginFailed: true})
-        }
-        console.log(this.state);
+    //     }else{
+    //         console.log('Failed');
+    //         this.setState({showSuccessMessage: false})
+    //         this.setState({hasLoginFailed: true})
+    //     }
+    //     console.log(this.state);
     }
+
+    // loginClicked() {
+    //     AuthenticationServiceJwt
+    //         .executeClubJwtAuthenticationService(this.state.clubUsername, this.state.password)
+    //         .then(response => {
+    //             console.log(response.data.token)
+    //             console.log(response.data)
+    //             AuthenticationServiceJwt
+    //                 .registerClubSuccessfulLoginForJwt(this.state.clubUsername, response.data.token)
+    //             this.props.history.push(`/welcome/${this.state.clubUsername}`);
+    //         // }).catch(() => {
+    //         // this.setState({showSuccessMessage: false})
+    //         // this.setState({hasLoginFailed: true})
+    //     });
+    //     console.log(this.state);
+    // }
+
 
     handleChange(event) {
         console.log(event.target.name);
@@ -78,8 +96,8 @@
                 <form>
                     <label>Club Name: </label>
                         <input type="text"
-                               name="clubname"
-                               value={this.state.clubname}
+                               name="clubUsername"
+                               value={this.state.clubUsername}
                                onChange={this.handleChange}
                         />
                     <label>Password: </label>
Index: src/components/pages/Welcome.jsx
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>import React, {Component} from \"react\";\r\nimport HelloWorldService from \"../../api/services/WelcomeDataService\";\r\n\r\nclass Welcome extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            welcomeMessage: ''\r\n        }\r\n\r\n        this.retrieveWelcomeMessage = this.retrieveWelcomeMessage.bind(this);\r\n        this.handleSuccessfulResponse = this.handleSuccessfulResponse.bind(this);\r\n        this.handleError = this.handleError.bind(this);\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.retrieveWelcomeMessage();\r\n    }\r\n\r\n    retrieveWelcomeMessage() {\r\n        console.log('retrieve message');\r\n        /*HelloWorldService.executeHelloWorldService()\r\n            .then(response => this.handleSuccessfulResponse(response))\r\n            .catch(error => this.handleError(error));*/\r\n\r\n        // HelloWorldService.executeHelloBeanService(this.props.match.params.name)\r\n        //     .then(response => this.handleSuccessfulResponse(response))\r\n        //\r\n        //\r\n        // HelloWorldService.executeHelloWorldPathVariableService(this.props.match.params.name)\r\n        //     .then(response => this.handleSuccessfulResponse(response))\r\n        //     .catch(error => this.handleError(error))\r\n\r\n        HelloWorldService.executeHelloBeanService(this.props.match.params.name)\r\n            .then(response => this.handleSuccessfulResponse(response))\r\n            .catch(error => this.handleError(error))\r\n    }\r\n\r\n    handleSuccessfulResponse(response) {\r\n        console.log(response)\r\n        this.setState({\r\n            welcomeMessage: response.data.message\r\n        })\r\n    }\r\n\r\n    handleError(error) {\r\n        console.log(error.response)\r\n        let errorMessage = '';\r\n\r\n        if (error.message) {\r\n            errorMessage += error.message;\r\n        }\r\n\r\n        if (error.response && error.response.data) {\r\n            errorMessage += error.response.data.message()\r\n        }\r\n        this.setState({\r\n            welcomeMessage: errorMessage\r\n        })\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"container content-box\">\r\n                <h3>Welcome to PokerApp, {this.props.match.params.name}!</h3>\r\n                &nbsp;\r\n                {/*<h6>Click here to get a customized welcome message</h6>*/}\r\n                {/*<button onClick={this.retrieveWelcomeMessage}*/}\r\n                {/*        className=\"btn btn-success\">*/}\r\n                {/*    Get Welcome Message*/}\r\n                {/*</button>*/}\r\n                <h4>{this.state.welcomeMessage}</h4>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Welcome
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/components/pages/Welcome.jsx b/src/components/pages/Welcome.jsx
--- a/src/components/pages/Welcome.jsx	
+++ b/src/components/pages/Welcome.jsx	
@@ -26,12 +26,12 @@
         // HelloWorldService.executeHelloBeanService(this.props.match.params.name)
         //     .then(response => this.handleSuccessfulResponse(response))
         //
-        //
+
         // HelloWorldService.executeHelloWorldPathVariableService(this.props.match.params.name)
         //     .then(response => this.handleSuccessfulResponse(response))
         //     .catch(error => this.handleError(error))
 
-        HelloWorldService.executeHelloBeanService(this.props.match.params.name)
+        HelloWorldService.executeHelloBeanService()
             .then(response => this.handleSuccessfulResponse(response))
             .catch(error => this.handleError(error))
     }
Index: src/components/pages/Header.jsx
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>import React, {Component} from \"react\";\r\nimport \"bootstrap\"\r\nimport {Link} from \"react-router-dom\";\r\nimport { withRouter } from \"react-router\";\r\nimport AuthenticationService from \"../../api/services/AuthenticationService.js\";\r\n\r\nclass Header extends Component {\r\n    render() {\r\n        const isUserLoggedIn = AuthenticationService.isUserLoggedIn();\r\n        const isClubLoggedIn = AuthenticationService.isClubLoggedIn();\r\n        console.log(isUserLoggedIn);\r\n        console.log(isClubLoggedIn);\r\n\r\n        return (\r\n            <nav className=\"head navbar navbar-expand-md\">\r\n                <div className=\"navbar-brand\">\r\n                    <img style={{maxWidth: \"30px\"}}\r\n                         src=\"/cards.png\"\r\n                         alt=\"cards\"\r\n                    />\r\n                    PokerApp\r\n                </div>\r\n                <ul className=\"navbar-nav\">\r\n                        <li>\r\n                            <Link className=\"nav-link link\" to=\"/\" >\r\n                                Home\r\n                            </Link>\r\n                        </li>\r\n\r\n                        <li>\r\n                            <Link to=\"/clubs\" className=\"nav-link link\">\r\n                                Clubs\r\n                            </Link>\r\n                        </li>\r\n                </ul>\r\n\r\n                <ul className=\"navbar-nav navbar-collapse justify-content-end\">\r\n                    {isUserLoggedIn &&\r\n                        <li>\r\n                            <Link to=\"/playerDetailsPage\" className=\"nav-link link\">\r\n                                Welcome {sessionStorage.getItem('authenticatedUser')}\r\n                            </Link>\r\n                        </li>}\r\n\r\n                    {isClubLoggedIn &&\r\n                        <li>\r\n                            <Link to=\"/clubDetailsPage\" className=\"nav-link link\">\r\n                                Welcome {sessionStorage.getItem('authenticatedClub')}\r\n                            </Link>\r\n                        </li>}\r\n\r\n                    {isUserLoggedIn &&\r\n                        <li>\r\n                            <Link to=\"/logout\"\r\n                                  className=\"nav-link link\"\r\n                                  onClick={AuthenticationService.logout}\r\n                            >\r\n                                Logout\r\n                            </Link>\r\n                        </li>}\r\n\r\n                    {isClubLoggedIn &&\r\n                        <li>\r\n                            <Link to=\"/logout\"\r\n                                  className=\"nav-link link\"\r\n                                  onClick={AuthenticationService.logout}\r\n                            >\r\n                                Logout\r\n                            </Link>\r\n                        </li>}\r\n                </ul>\r\n            </nav>\r\n        )\r\n    }\r\n}\r\n\r\n// export default Header;\r\nexport default withRouter(Header);
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/components/pages/Header.jsx b/src/components/pages/Header.jsx
--- a/src/components/pages/Header.jsx	
+++ b/src/components/pages/Header.jsx	
@@ -3,6 +3,7 @@
 import {Link} from "react-router-dom";
 import { withRouter } from "react-router";
 import AuthenticationService from "../../api/services/AuthenticationService.js";
+// import AuthenticationServiceJwt from "../../api/services/AuthenticationServiceJwt";
 
 class Header extends Component {
     render() {
Index: src/components/players/PlayerLogin.jsx
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>import React, {Component} from \"react\";\r\nimport AuthenticationService from \"../../api/services/AuthenticationService.js\";\r\n\r\nclass PlayerLogin extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            username: '',\r\n            password: '',\r\n            hasLoginFailed: false,\r\n            showSuccessMessage: false\r\n        }\r\n\r\n        this.handleChange = this.handleChange.bind(this);\r\n        this.loginClicked = this.loginClicked.bind(this);\r\n    }\r\n\r\n    loginClicked() {\r\n        //Dani, 1234\r\n        if ((this.state.username==='Dani' && this.state.password==='1234')\r\n            || (this.state.username === 'Luna' && this.state.password === '1234')) {\r\n            console.log('Successful')\r\n            AuthenticationService.registerSuccessfulLogin(this.state.username, this.state.password);\r\n            this.props.history.push(`/welcome/${this.state.username}`)\r\n        }else{\r\n            console.log('Failed');\r\n            this.setState({showSuccessMessage: false})\r\n            this.setState({hasLoginFailed: true})\r\n        }\r\n        console.log(this.state);\r\n    }\r\n\r\n    handleChange(event) {\r\n        console.log(event.target.name);\r\n        this.setState(\r\n            {\r\n                [event.target.name]: event.target.value\r\n            }\r\n        )\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"container content-box\">\r\n                <h3>Player Login</h3>\r\n                &nbsp;\r\n                {this.state.hasLoginFailed && <div className=\"alert alert-warning\">\r\n                                Invalid Credentials</div>}\r\n                {/*{this.state.showSuccessMessage && <div className=\"alert alert-success\">Login Successful</div>}*/}\r\n                <form>\r\n                   <label>UserName: </label>\r\n                       <input type=\"text\"\r\n                              name=\"username\"\r\n                              value={this.state.username}\r\n                              onChange={this.handleChange}\r\n                        />\r\n                        <br/>\r\n                    <label>Password: </label>\r\n                        <input type=\"password\"\r\n                                name=\"password\"\r\n                               value={this.state.password}\r\n                               onChange={this.handleChange}\r\n                        />\r\n\r\n                    <button className=\"btn btn-success\"\r\n                        onClick={this.loginClicked}>\r\n                        Login\r\n                    </button>\r\n                </form>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default PlayerLogin
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/components/players/PlayerLogin.jsx b/src/components/players/PlayerLogin.jsx
--- a/src/components/players/PlayerLogin.jsx	
+++ b/src/components/players/PlayerLogin.jsx	
@@ -1,5 +1,7 @@
 import React, {Component} from "react";
 import AuthenticationService from "../../api/services/AuthenticationService.js";
+import AuthenticationServiceJwt from "../../api/services/AuthenticationServiceJwt";
+import PlayersDataService from "../../api/services/PlayersDataService";
 
 class PlayerLogin extends Component {
     constructor(props) {
@@ -9,26 +11,51 @@
             username: '',
             password: '',
             hasLoginFailed: false,
-            showSuccessMessage: false
+            showSuccessMessage: true
         }
 
         this.handleChange = this.handleChange.bind(this);
         this.loginClicked = this.loginClicked.bind(this);
+        this.refreshPlayers = this.refreshPlayers.bind(this);
+    }
+
+    componentDidMount() {
+        this.refreshPlayers()
     }
+
+    refreshPlayers() {
+        let playerName = this.state.username
+        let playerPassword = this.state.password
+        PlayersDataService.retrievePlayer(playerName)
+            .then(
+                response => {
+                    console.log(response)
+                    // if (playerName === response.data.username) {
+                        this.setState({
+                            // id : response.data.id,
+                            username: response.data.username,
+                            // email: response.data.email,
+                            password: response.data.password
+                        })
+                }
+            )
+    }
+
 
     loginClicked() {
-        //Dani, 1234
-        if ((this.state.username==='Dani' && this.state.password==='1234')
-            || (this.state.username === 'Luna' && this.state.password === '1234')) {
-            console.log('Successful')
-            AuthenticationService.registerSuccessfulLogin(this.state.username, this.state.password);
+    //     //Dani, 1234
+    //     if ((this.state.username==='Dani' && this.state.password==='1234')
+    //         || (this.state.username === 'Luna' && this.state.password === '1234')) {
+    //         console.log('Successful')
+
+            AuthenticationService.registerSuccessfulLogin(this.state.username);
             this.props.history.push(`/welcome/${this.state.username}`)
-        }else{
-            console.log('Failed');
-            this.setState({showSuccessMessage: false})
-            this.setState({hasLoginFailed: true})
-        }
-        console.log(this.state);
+    //     }else{
+    //         console.log('Failed');
+    //         this.setState({showSuccessMessage: false})
+    //         this.setState({hasLoginFailed: true})
+    //     }
+    //     console.log(this.state);
     }
 
     handleChange(event) {
@@ -40,13 +67,32 @@
         )
     }
 
+    // loginClicked() {
+    //         AuthenticationServiceJwt.
+    //             executeUserJwtAuthenticationService(this.state.username, this.state.password)
+    //             .then((response) => {
+    //             console.log(response.data.token)
+    //             console.log(response.data)
+    //             AuthenticationServiceJwt
+    //                 .registerSuccessfulLoginForJwt(this.state.username, response.data.token)
+    //
+    //             console.log(this.state);
+    //             this.props.history.push(`/welcome/${this.state.username}`);
+    //         }).catch(() => {
+    //             this.setState({showSuccessMessage: false})
+    //             this.setState({hasLoginFailed: true})
+    //         });
+    // }
+
+
+
     render() {
         return (
             <div className="container content-box">
                 <h3>Player Login</h3>
                 &nbsp;
-                {this.state.hasLoginFailed && <div className="alert alert-warning">
-                                Invalid Credentials</div>}
+                {/*{this.state.hasLoginFailed && <div className="alert alert-warning">*/}
+                {/*                Invalid Credentials</div>}*/}
                 {/*{this.state.showSuccessMessage && <div className="alert alert-success">Login Successful</div>}*/}
                 <form>
                    <label>UserName: </label>
Index: src/components/players/PlayerRegister.jsx
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>import React, {Component} from \"react\";\r\n// import {ErrorMessage, Form, Formik, Field} from \"formik\";\r\nimport PlayersDataService from \"../../api/services/PlayersDataService\";\r\n\r\nclass PlayerRegister extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            // id: this.props.match.params.id,\r\n            // id: -1,\r\n            username: '',\r\n            email: '',\r\n            password: ''\r\n        }\r\n        // this.validate = this.validate.bind(this)\r\n        // this.onSubmit = this.onSubmit.bind(this)\r\n        // this.handleChange = this.handleChange.bind(this)\r\n        // this.handleSubmit = this.handleSubmit.bind(this)\r\n    }\r\n\r\n    // componentDidMount() {\r\n    //     this.handleSubmit();\r\n    // }\r\n\r\n    // componentDidMount() {\r\n        // console.log(\"component did mount\")\r\n        // if (this.state.id !== null) {\r\n        //     return\r\n        // }\r\n        //\r\n        // this.onSubmit(this.values);\r\n\r\n        // PlayersDataService.createPlayer(this.state.username)\r\n        //     .then(response => this.setState({\r\n        //         username: response.data.username,\r\n        //         email: response.data.email,\r\n        //         password: response.data.password\r\n        //     }))\r\n\r\n    // }\r\n\r\n    // validate(values) {\r\n    //     console.log(\"Validate \" + values)\r\n    //     let error = {}\r\n    //     if (!this.state.username) {\r\n    //         error.username = 'Enter a username'\r\n    //     } else if(this.state.username.length < 3) {\r\n    //         error.username = 'Username has to have at least 3 characters'\r\n    //     }\r\n    //\r\n    //     if (!this.state.email) {\r\n    //         error.email = 'Enter a email'\r\n    //         // } else if(values.username.length < 3) {\r\n    //         //     error.username = 'Username has to have at least 3 characters'\r\n    //     }\r\n    //\r\n    //     if (!this.state.password) {\r\n    //         error.password = 'Enter a password'\r\n    //     } else if(this.state.password.length < 4) {\r\n    //         error.password = 'Password has to have at least 4 characters'\r\n    //     }\r\n    //     return error\r\n    // }\r\n\r\n    // onSubmit(values) {\r\n    //     console.log(\"on submit\" + values)\r\n    //\r\n    //     let player = {\r\n    //         username: values.username,\r\n    //         email: values.email,\r\n    //         password: values.password\r\n    //     }\r\n    //\r\n    //     // if (this.state.id === -1) {\r\n    //         PlayersDataService.createPlayer(player.username)\r\n    //             // .then(() => this.props.history.push(`/registerSuccessful`))\r\n    //             .then(() => console.log(player))\r\n    //     // }\r\n    // }\r\n\r\n    handleChange = (event) => {\r\n        this.setState({\r\n            [event.target.name]: event.target.value\r\n        })\r\n    }\r\n\r\n    handleSubmit = (event) => {\r\n        event.preventDefault()\r\n        let player = {\r\n            email: this.state.email,\r\n            password: this.state.password\r\n        }\r\n        PlayersDataService.createPlayer(this.state.username, player)\r\n            .then(response => {\r\n                console.log(response)\r\n                this.props.history.push(`/registerSuccessful`)\r\n            })\r\n    }\r\n\r\n    render() {\r\n        let {username, email, password} = this.state\r\n\r\n        return (\r\n            <div className=\"container content-box\">\r\n                <h3>Player Register Form</h3>\r\n                &nbsp;\r\n                <form onSubmit={this.handleSubmit}>\r\n                    <label>UserName: </label>\r\n                    <input type=\"text\"\r\n                           name=\"username\"\r\n                           value={username}\r\n                           onChange={this.handleChange}\r\n                    />\r\n                    <br/>\r\n                    <label>Email: </label>\r\n                    <input type=\"email\"\r\n                           name=\"email\"\r\n                           value={email}\r\n                           onChange={this.handleChange}\r\n                    />\r\n                    <br/>\r\n                    <label>Password: </label>\r\n                    <input type=\"password\"\r\n                           name=\"password\"\r\n                           value={password}\r\n                           onChange={this.handleChange}\r\n                    />\r\n\r\n                    <button className=\"btn btn-success\"\r\n                            type=\"submit\"\r\n                            // onClick={this.loginClicked}\r\n                            // onClick={this.handleSubmit}\r\n                    >\r\n                        Register\r\n                    </button>\r\n                </form>\r\n                {/*<Formik initialValues={{}}*/}\r\n                {/*        onSubmit={this.onSubmit}*/}\r\n                {/*        validate={this.validate}*/}\r\n                {/*        validateOnChange={true}*/}\r\n                {/*        validateOnBlur={true}*/}\r\n                {/*        enableReinitialize={false}*/}\r\n                {/*>{*/}\r\n                {/*    (props) => (*/}\r\n                {/*        <Form>*/}\r\n                {/*            <ErrorMessage name=\"username\"*/}\r\n                {/*                          component=\"div\"*/}\r\n                {/*                          className=\"alert alert-warning\"*/}\r\n                {/*            />*/}\r\n                {/*            <ErrorMessage name=\"email\"*/}\r\n                {/*                          component=\"div\"*/}\r\n                {/*                          className=\"alert alert-warning\"*/}\r\n                {/*            />*/}\r\n                {/*            <ErrorMessage name=\"password\"*/}\r\n                {/*                          component=\"div\"*/}\r\n                {/*                          className=\"alert alert-warning\"*/}\r\n                {/*            />*/}\r\n                {/*            <fieldset className=\"form-group\">*/}\r\n                {/*                <label>Name: </label>*/}\r\n                {/*                <Field className=\"form-control\"*/}\r\n                {/*                       type=\"text\"*/}\r\n                {/*                       name=\"username\"/>*/}\r\n\r\n                {/*            </fieldset>*/}\r\n                {/*            <fieldset className=\"form-group\">*/}\r\n                {/*                <label>Email: </label>*/}\r\n                {/*                <Field className=\"form-control\"*/}\r\n                {/*                       type=\"email\"*/}\r\n                {/*                       name=\"email\"/>*/}\r\n                {/*            </fieldset>*/}\r\n                {/*            <fieldset className=\"form-group\">*/}\r\n                {/*                <label>Password: </label>*/}\r\n                {/*                <Field className=\"form-control\"*/}\r\n                {/*                       type=\"password\"*/}\r\n                {/*                       name=\"password\"/>*/}\r\n                {/*            </fieldset>*/}\r\n                {/*            <button className=\"btn btn-success\"*/}\r\n                {/*                    type=\"submit\">*/}\r\n                {/*                /!*<Link to=\"/registerSuccessful\" className=\"link\">*!/*/}\r\n                {/*                    Register*/}\r\n                {/*                /!*</Link>*!/*/}\r\n                {/*            </button>*/}\r\n                {/*        </Form>*/}\r\n                {/*    )*/}\r\n                {/*}*/}\r\n                {/*</Formik>*/}\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default PlayerRegister\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/components/players/PlayerRegister.jsx b/src/components/players/PlayerRegister.jsx
--- a/src/components/players/PlayerRegister.jsx	
+++ b/src/components/players/PlayerRegister.jsx	
@@ -1,6 +1,9 @@
 import React, {Component} from "react";
+import Form from 'react-validation/build/form';
+import Input from 'react-validation/build/input';
 // import {ErrorMessage, Form, Formik, Field} from "formik";
 import PlayersDataService from "../../api/services/PlayersDataService";
+import {required, emails, passwordValidation} from "../../api/services/Validations";
 
 class PlayerRegister extends Component {
     constructor(props) {
@@ -11,12 +14,23 @@
             // id: -1,
             username: '',
             email: '',
-            password: ''
+            password: '',
+            confirmPassword: '',
+            errors: {
+                username: '',
+                email: '',
+                password: '',
+                confirmPassword: ''
+            }
         }
         // this.validate = this.validate.bind(this)
         // this.onSubmit = this.onSubmit.bind(this)
-        // this.handleChange = this.handleChange.bind(this)
-        // this.handleSubmit = this.handleSubmit.bind(this)
+        this.handleChange = this.handleChange.bind(this)
+        this.handleSubmit = this.handleSubmit.bind(this)
+        this.validateUsername = this.validateUsername.bind(this)
+        this.validateEmail = this.validateEmail.bind(this)
+        this.validatePassword = this.validatePassword.bind(this)
+        this.validateConfirmPassword = this.validateConfirmPassword.bind(this)
     }
 
     // componentDidMount() {
@@ -24,44 +38,80 @@
     // }
 
     // componentDidMount() {
-        // console.log("component did mount")
-        // if (this.state.id !== null) {
-        //     return
-        // }
-        //
-        // this.onSubmit(this.values);
-
-        // PlayersDataService.createPlayer(this.state.username)
-        //     .then(response => this.setState({
-        //         username: response.data.username,
-        //         email: response.data.email,
-        //         password: response.data.password
-        //     }))
-
-    // }
-
-    // validate(values) {
-    //     console.log("Validate " + values)
-    //     let error = {}
-    //     if (!this.state.username) {
-    //         error.username = 'Enter a username'
-    //     } else if(this.state.username.length < 3) {
-    //         error.username = 'Username has to have at least 3 characters'
-    //     }
-    //
-    //     if (!this.state.email) {
-    //         error.email = 'Enter a email'
-    //         // } else if(values.username.length < 3) {
-    //         //     error.username = 'Username has to have at least 3 characters'
-    //     }
+    //     console.log("component did mount")
+    //     if (this.state.id !== null) {
+    //         return
+    //     }
+    //
+    //     this.onSubmit(this.values);
+    //
+    //     PlayersDataService.createPlayer(this.state.username)
+    //         .then(response => this.setState({
+    //             username: response.data.username,
+    //             email: response.data.email,
+    //             password: response.data.password
+    //         }))
     //
-    //     if (!this.state.password) {
-    //         error.password = 'Enter a password'
-    //     } else if(this.state.password.length < 4) {
-    //         error.password = 'Password has to have at least 4 characters'
-    //     }
-    //     return error
     // }
+
+    validateUsername() {
+        // console.log(name)
+        let error = this.state.errors
+        if (!this.state.username) {
+            error.username = 'Required'
+        }else if (this.state.username.length < 3) {
+            error.username = 'Username has to have at least 3 characters'
+        }else {
+            error.username = ''
+        }
+    }
+
+    //Email
+    validateEmail() {
+        let error = this.state.errors
+        let lastAtPos = this.state.email.lastIndexOf("@");
+        let lastDotPos = this.state.email.lastIndexOf(".");
+
+        if (!this.state.email) {
+            error.email = 'Required'
+        }else if (
+                !(
+                    lastAtPos < lastDotPos &&
+                    lastAtPos > 0 &&
+                    this.state.email.indexOf("@@") === -1 &&
+                    lastDotPos > 2 &&
+                    this.state.email.length - lastDotPos > 2
+                )
+            ) {
+                error.email = "Email is not valid";
+        }else {
+            error.email = ''
+        }
+    }
+
+    validatePassword() {
+        // console.log(name)
+        let error = this.state.errors
+        if (!this.state.password) {
+            error.password = 'Required'
+        }else if (this.state.password.length < 3) {
+            error.password = 'Password has to have at least 3 characters'
+        }else {
+            error.password = ''
+        }
+    }
+
+    validateConfirmPassword() {
+        // console.log(name)
+        let error = this.state.errors
+        if (!this.state.confirmPassword) {
+            error.confirmPassword= 'Required'
+        }else if (!(this.state.confirmPassword === this.state.password)) {
+            error.confirmPassword = 'Password has to be the same. Try again!'
+        }else {
+            error.confirmPassword = ''
+        }
+    }
 
     // onSubmit(values) {
     //     console.log("on submit" + values)
@@ -74,8 +124,8 @@
     //
     //     // if (this.state.id === -1) {
     //         PlayersDataService.createPlayer(player.username)
-    //             // .then(() => this.props.history.push(`/registerSuccessful`))
-    //             .then(() => console.log(player))
+    //             .then(() => this.props.history.push(`/registerSuccessful`))
+    //             // .then(() => console.log(player))
     //     // }
     // }
 
@@ -99,82 +149,124 @@
     }
 
     render() {
-        let {username, email, password} = this.state
+        let {username, email, password, confirmPassword} = this.state
 
         return (
             <div className="container content-box">
                 <h3>Player Register Form</h3>
                 &nbsp;
                 <form onSubmit={this.handleSubmit}>
-                    <label>UserName: </label>
+                    <label>UserName:
                     <input type="text"
                            name="username"
                            value={username}
                            onChange={this.handleChange}
+                           required={this.validateUsername()}
                     />
+                    </label>
                     <br/>
-                    <label>Email: </label>
+                        {this.state.errors.username &&
+                            <p style={{color: "red", display: "inline-block"}}>{this.state.errors.username}</p>}
+                    <br/>
+                    <label>Email:
                     <input type="email"
                            name="email"
                            value={email}
                            onChange={this.handleChange}
+                           required={this.validateEmail()}
                     />
+                    </label>
                     <br/>
-                    <label>Password: </label>
+                    {this.state.errors.email &&
+                    <p style={{color: "red", display: "inline-block"}}>{this.state.errors.email}</p>}
+                    <br/>
+                    <label>Password:
                     <input type="password"
                            name="password"
                            value={password}
                            onChange={this.handleChange}
+                           required={this.validatePassword()}
                     />
-
+                    </label>
+                    <br/>
+                    {this.state.errors.password &&
+                    <p style={{color: "red", display: "inline-block"}}>{this.state.errors.password}</p>}
+                    <br/>
+                    <label>Confirm Password:
+                    <input type="password"
+                           name="confirmPassword"
+                           value={confirmPassword}
+                           onChange={this.handleChange}
+                           required={this.validateConfirmPassword()}
+                    />
+                    </label>
+                    <br/>
+                    {this.state.errors.confirmPassword &&
+                    <p style={{color: "red", display: "inline-block"}}>{this.state.errors.confirmPassword}</p>}
+                    <br/>
                     <button className="btn btn-success"
                             type="submit"
-                            // onClick={this.loginClicked}
                             // onClick={this.handleSubmit}
                     >
                         Register
                     </button>
                 </form>
+
                 {/*<Formik initialValues={{}}*/}
                 {/*        onSubmit={this.onSubmit}*/}
-                {/*        validate={this.validate}*/}
+                {/*        validate={this.handleChange}*/}
                 {/*        validateOnChange={true}*/}
                 {/*        validateOnBlur={true}*/}
                 {/*        enableReinitialize={false}*/}
                 {/*>{*/}
                 {/*    (props) => (*/}
                 {/*        <Form>*/}
-                {/*            <ErrorMessage name="username"*/}
-                {/*                          component="div"*/}
-                {/*                          className="alert alert-warning"*/}
-                {/*            />*/}
-                {/*            <ErrorMessage name="email"*/}
-                {/*                          component="div"*/}
-                {/*                          className="alert alert-warning"*/}
-                {/*            />*/}
-                {/*            <ErrorMessage name="password"*/}
-                {/*                          component="div"*/}
-                {/*                          className="alert alert-warning"*/}
-                {/*            />*/}
                 {/*            <fieldset className="form-group">*/}
                 {/*                <label>Name: </label>*/}
                 {/*                <Field className="form-control"*/}
                 {/*                       type="text"*/}
-                {/*                       name="username"/>*/}
-
+                {/*                       name="username"*/}
+                {/*                       value={this.state.username}*/}
+                {/*                />*/}
                 {/*            </fieldset>*/}
+                {/*            <ErrorMessage name="username"*/}
+                {/*                          component="p"*/}
+                {/*                          className="alert alert-warning"*/}
+                {/*            />*/}
+
                 {/*            <fieldset className="form-group">*/}
                 {/*                <label>Email: </label>*/}
                 {/*                <Field className="form-control"*/}
                 {/*                       type="email"*/}
                 {/*                       name="email"/>*/}
                 {/*            </fieldset>*/}
+                {/*            <ErrorMessage name="email"*/}
+                {/*                          component="p"*/}
+                {/*                          className="alert alert-warning"*/}
+                {/*            />*/}
+
                 {/*            <fieldset className="form-group">*/}
                 {/*                <label>Password: </label>*/}
                 {/*                <Field className="form-control"*/}
                 {/*                       type="password"*/}
                 {/*                       name="password"/>*/}
                 {/*            </fieldset>*/}
+                {/*            <ErrorMessage name="password"*/}
+                {/*                          component="p"*/}
+                {/*                          className="alert alert-warning"*/}
+                {/*            />*/}
+
+                {/*            <fieldset className="form-group">*/}
+                {/*                <label>Confirm Password: </label>*/}
+                {/*                <Field className="form-control"*/}
+                {/*                       type="password"*/}
+                {/*                       name="confirmPassword"/>*/}
+                {/*            </fieldset>*/}
+                {/*            <ErrorMessage name="confirmPassword"*/}
+                {/*                          component="p"*/}
+                {/*                          className="alert alert-warning"*/}
+                {/*            />*/}
+
                 {/*            <button className="btn btn-success"*/}
                 {/*                    type="submit">*/}
                 {/*                /!*<Link to="/registerSuccessful" className="link">*!/*/}
@@ -190,4 +282,6 @@
     }
 }
 
+
+
 export default PlayerRegister
Index: src/components/players/PlayerDetailsPage.jsx
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>import React, {Component} from \"react\";\r\nimport {Link} from \"react-router-dom\";\r\nimport AuthenticationService from \"../../api/services/AuthenticationService\";\r\nimport PlayersDataService from \"../../api/services/PlayersDataService\";\r\n\r\nclass PlayerDetailsPage extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            id: '',\r\n            username: ''\r\n        }\r\n        this.refreshPlayers = this.refreshPlayers.bind(this)\r\n        this.deleteAccount = this.deleteAccount.bind(this)\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.refreshPlayers()\r\n    }\r\n\r\n    refreshPlayers() {\r\n        let playerName = AuthenticationService.getLoggedInUserName()\r\n        PlayersDataService.retrievePlayer(playerName)\r\n            .then(\r\n                response => {\r\n                    console.log(response)\r\n                    this.setState({\r\n                        id : response.data.id,\r\n                        username: response.data.username\r\n                    })\r\n                }\r\n            )\r\n    }\r\n\r\n    deleteAccount(id) {\r\n        let playerName = this.state.username\r\n        console.log(id + \" \" + playerName);\r\n        if(window.confirm('Are you sure you want to delete this account?')) {\r\n            PlayersDataService.deletePlayer(playerName, id)\r\n                .then(response => {\r\n                    console.log(response)\r\n                })\r\n        }\r\n        AuthenticationService.logout();\r\n    }\r\n\r\n    handleClick = () => {\r\n        this.props.history.push(`/playerAccount/${this.state.username}/${this.state.id}`)\r\n    }\r\n\r\n    render() {\r\n        let {id} = this.state\r\n\r\n        return (\r\n            <div>\r\n                <h4>Welcome to your page, {sessionStorage.getItem('authenticatedUser')}!</h4>\r\n                &nbsp;\r\n                <button className=\"btn btn-success\"\r\n                        onClick={this.handleClick}\r\n                        style={{width: \"300px\"}}>\r\n                    {/*<Link to=\"/playerAccount\" className=\"link\">*/}\r\n                        Change Account Details\r\n                    {/*</Link>*/}\r\n                </button>\r\n                &nbsp;\r\n                <button className=\"btn btn-success\"\r\n                        style={{width: \"300px\"}}>\r\n                    <a href=\"https://www.pokerstars.ro/poker/games/rules/\"\r\n                          target=\"_blank\"\r\n                            rel=\"noreferrer\"\r\n                          className=\"link\">\r\n                        Check the Rules\r\n                    </a>\r\n                </button>\r\n                &nbsp;\r\n                <button className=\"btn btn-success\"\r\n                        style={{width: \"300px\"}}>\r\n                    <Link to=\"/\" className=\"link\">\r\n                        Go to Private Games\r\n                    </Link>\r\n                </button>\r\n                &nbsp;\r\n                <button className=\"btn btn-warning\"\r\n                        type=\"submit\"\r\n                        style={{width: \"300px\"}}\r\n                        onClick={() => this.deleteAccount(id)}\r\n                >\r\n                    <Link to=\"/\" className=\"link\">\r\n                        Delete Account\r\n                    </Link>\r\n                </button>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default PlayerDetailsPage
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/components/players/PlayerDetailsPage.jsx b/src/components/players/PlayerDetailsPage.jsx
--- a/src/components/players/PlayerDetailsPage.jsx	
+++ b/src/components/players/PlayerDetailsPage.jsx	
@@ -41,8 +41,8 @@
                 .then(response => {
                     console.log(response)
                 })
-        }
         AuthenticationService.logout();
+        }
     }
 
     handleClick = () => {
Index: src/components/players/PlayerAccount.jsx
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>import React, {Component} from \"react\";\r\n// import {ErrorMessage, Field, Form, Formik} from 'formik';\r\n// import {Link} from \"react-router-dom\";\r\nimport PlayersDataService from \"../../api/services/PlayersDataService\";\r\n\r\nclass PlayerAccount extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            id: this.props.match.params.id,\r\n            username: this.props.match.params.name,\r\n            email: '',\r\n            password: ''\r\n        }\r\n\r\n        this.validate = this.validate.bind(this)\r\n        this.refreshPlayers = this.refreshPlayers.bind(this)\r\n        this.handleChange = this.handleChange.bind(this)\r\n        this.handleSubmit = this.handleSubmit.bind(this)\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.refreshPlayers()\r\n    }\r\n\r\n    refreshPlayers() {\r\n        let playerName = this.state.username\r\n        PlayersDataService.retrievePlayer(playerName)\r\n            .then(\r\n                response => {\r\n                    console.log(response)\r\n                    this.setState({\r\n                        id : response.data.id,\r\n                        username: response.data.username,\r\n                        email: response.data.email,\r\n                        password: response.data.password\r\n                    })\r\n                }\r\n            )\r\n    }\r\n\r\n    validate(values) {\r\n        console.log(values)\r\n        // this.handleChange(values)\r\n        let error = {}\r\n        if (!values.username) {\r\n            error.username = 'Enter a username'\r\n        } else if(values.username.length < 3) {\r\n            error.username = 'Username has to have at least 3 characters'\r\n        }\r\n\r\n        if (!values.email) {\r\n            error.email = 'Enter a email'\r\n        }\r\n\r\n        if (!values.password) {\r\n            error.password = 'Enter a password'\r\n        } else if(values.password.length < 4) {\r\n            error.password = 'Password has to have at least 4 characters'\r\n        }\r\n        return error\r\n    }\r\n\r\n    handleChange = (event) => {\r\n        console.log(event.target.name);\r\n        this.setState(\r\n            {\r\n                [event.target.name]: event.target.value\r\n            }\r\n        )\r\n    }\r\n\r\n    handleSubmit = (event) => {\r\n        event.preventDefault()\r\n        let player = {\r\n            email: this.state.email,\r\n            password: this.state.password\r\n        }\r\n        PlayersDataService.updatePlayer(this.state.username, this.state.id, player)\r\n            .then(response => {\r\n                console.log(response)\r\n                this.props.history.push(`/`)\r\n            })\r\n    }\r\n\r\n    render() {\r\n        let {username, email, password} = this.state\r\n        return (\r\n            <div>\r\n                <h2>Player Account Details</h2>\r\n                &nbsp;\r\n                <form onSubmit={this.handleSubmit}>\r\n                    <label>UserName: </label>\r\n                    <input type=\"text\"\r\n                           name=\"username\"\r\n                           value={username}\r\n                           onChange={this.handleChange}\r\n                    />\r\n                    <label>Email: </label>\r\n                    <input type=\"text\"\r\n                           name=\"email\"\r\n                           value={email}\r\n                           onChange={this.handleChange}\r\n                    />\r\n                    <br/>\r\n                    <label>Password: </label>\r\n                    <input type=\"password\"\r\n                           name=\"password\"\r\n                           value={password}\r\n                           onChange={this.handleChange}\r\n                    />\r\n                    &nbsp;\r\n                    &nbsp;\r\n                    <button className=\"btn btn-success\"\r\n                            type=\"submit\"\r\n                            style={{width: \"220px\"}}\r\n                            onClick={this.validate}\r\n                    >\r\n                        Submit Changes\r\n                    </button>\r\n                </form>\r\n\r\n                {/*<Formik initialValues={{username, email, password}}*/}\r\n                {/*        onSubmit={this.handleSubmit}*/}\r\n                {/*        validate={this.validate}*/}\r\n                {/*        validateOnBlur={false}*/}\r\n                {/*        validateOnChange={true}*/}\r\n                {/*        enableReinitialize={false}*/}\r\n                {/*>{*/}\r\n                {/*    (props) => (*/}\r\n                {/*        <Form>*/}\r\n                {/*            <ErrorMessage name=\"username\"*/}\r\n                {/*                          component=\"div\"*/}\r\n                {/*                          className=\"alert alert-warning\"*/}\r\n                {/*            />*/}\r\n                {/*            <ErrorMessage name=\"email\"*/}\r\n                {/*                          component=\"div\"*/}\r\n                {/*                          className=\"alert alert-warning\"*/}\r\n                {/*            />*/}\r\n                {/*            <ErrorMessage name=\"password\"*/}\r\n                {/*                          component=\"div\"*/}\r\n                {/*                          className=\"alert alert-warning\"*/}\r\n                {/*            />*/}\r\n\r\n                {/*            <fieldset className=\"form-group\">*/}\r\n                {/*                <label>Name: </label>*/}\r\n                {/*                <Field className=\"form-control\"*/}\r\n                {/*                       type=\"text\"*/}\r\n                {/*                       name=\"username\"*/}\r\n                {/*                       // value={username}*/}\r\n                {/*                       // onChange={this.handleChange}*/}\r\n                {/*                />*/}\r\n\r\n                {/*            </fieldset>*/}\r\n                {/*            <fieldset className=\"form-group\">*/}\r\n                {/*                <label>Email: </label>*/}\r\n                {/*                <Field className=\"form-control\"*/}\r\n                {/*                       type=\"email\"*/}\r\n                {/*                       name=\"email\"*/}\r\n                {/*                       // value={email}*/}\r\n                {/*                       // onChange={this.handleChange}*/}\r\n                {/*                />*/}\r\n                {/*            </fieldset>*/}\r\n                {/*            <fieldset className=\"form-group\">*/}\r\n                {/*                <label>Password: </label>*/}\r\n                {/*                <Field className=\"form-control\"*/}\r\n                {/*                       type=\"password\"*/}\r\n                {/*                       name=\"password\"*/}\r\n                {/*                       // value={password}*/}\r\n                {/*                       // onChange={this.handleChange}*/}\r\n                {/*                />*/}\r\n                {/*            </fieldset>*/}\r\n                {/*            <button className=\"btn btn-success\"*/}\r\n                {/*                    style={{width: \"220px\"}}>*/}\r\n                {/*                /!*<Link to=\"/\" className=\"link\">*!/*/}\r\n                {/*                    Submit Changes*/}\r\n                {/*                /!*</Link>*!/*/}\r\n                {/*            </button>*/}\r\n                {/*        </Form>*/}\r\n                {/*    )*/}\r\n                {/*}*/}\r\n                {/*</Formik>*/}\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default PlayerAccount
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/components/players/PlayerAccount.jsx b/src/components/players/PlayerAccount.jsx
--- a/src/components/players/PlayerAccount.jsx	
+++ b/src/components/players/PlayerAccount.jsx	
@@ -11,7 +11,8 @@
             id: this.props.match.params.id,
             username: this.props.match.params.name,
             email: '',
-            password: ''
+            password: '',
+            token: ''
         }
 
         this.validate = this.validate.bind(this)
@@ -34,7 +35,8 @@
                         id : response.data.id,
                         username: response.data.username,
                         email: response.data.email,
-                        password: response.data.password
+                        password: response.data.password,
+                        token: response.data.token
                     })
                 }
             )
@@ -75,7 +77,8 @@
         event.preventDefault()
         let player = {
             email: this.state.email,
-            password: this.state.password
+            password: this.state.password,
+            token: this.state.token
         }
         PlayersDataService.updatePlayer(this.state.username, this.state.id, player)
             .then(response => {
Index: .idea/shelf/Uncommitted_changes_before_Checkout_at_22_09_2021_12_58__Default_Changelist_.xml
===================================================================
diff --git a/.idea/shelf/Uncommitted_changes_before_Checkout_at_22_09_2021_12_58__Default_Changelist_.xml b/.idea/shelf/Uncommitted_changes_before_Checkout_at_22_09_2021_12_58__Default_Changelist_.xml
deleted file mode 100644
--- a/.idea/shelf/Uncommitted_changes_before_Checkout_at_22_09_2021_12_58__Default_Changelist_.xml	
+++ /dev/null	
@@ -1,4 +0,0 @@
-<changelist name="Uncommitted_changes_before_Checkout_at_22_09_2021_12_58_[Default_Changelist]" date="1632304750383" recycled="true" deleted="true">
-  <option name="PATH" value="$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Checkout_at_22_09_2021_12_58_[Default_Changelist]/shelved.patch" />
-  <option name="DESCRIPTION" value="Uncommitted changes before Checkout at 22/09/2021 12:58 [Default Changelist]" />
-</changelist>
\ No newline at end of file
Index: src/api/services/WelcomeDataService.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>import axios from \"axios\";\r\nimport {API_URL} from \"../../Constants\";\r\n\r\n\r\nclass WelcomeDataService {\r\n    executeHelloWorldService() {\r\n        console.log('executed service')\r\n        return axios.get(`${API_URL}/welcome`);\r\n    }\r\n\r\n    executeHelloBeanService() {\r\n        console.log('executed bean service')\r\n        // let username = 'Luna'\r\n        // let password = '1234'\r\n        //\r\n        // let basicAuthHeader = 'Basic ' + window.btoa(username + \":\" + password)\r\n\r\n        return axios.get(`${API_URL}/welcome-bean`\r\n        //     ,\r\n        // {\r\n        //     headers: {\r\n        //         authorization: basicAuthHeader\r\n        //     }\r\n        //     }\r\n            );\r\n    }\r\n\r\n    // executeHelloWorldPathVariableService(user) {\r\n    //     console.log('executed path variable')\r\n    //     let username = 'Dani'\r\n    //     let password = '1234'\r\n    //\r\n    //     let basicAuthHeader = 'Basic ' + window.btoa(username + \":\" + password)\r\n    //\r\n    //     return axios.get(`http://localhost:8081/welcome/${user}`,\r\n    //         {\r\n    //             headers: {\r\n    //                 authorization: basicAuthHeader\r\n    //             }\r\n    //         });\r\n    // }\r\n}\r\n\r\nexport default new WelcomeDataService();
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/api/services/WelcomeDataService.js b/src/api/services/WelcomeDataService.js
--- a/src/api/services/WelcomeDataService.js	
+++ b/src/api/services/WelcomeDataService.js	
@@ -1,5 +1,7 @@
 import axios from "axios";
 import {API_URL} from "../../Constants";
+// import AuthenticationServiceJwt from "./AuthenticationServiceJwt";
+import playerAuthHeader from "./PlayerAuthHeader";
 
 
 class WelcomeDataService {
@@ -16,29 +18,31 @@
         // let basicAuthHeader = 'Basic ' + window.btoa(username + ":" + password)
 
         return axios.get(`${API_URL}/welcome-bean`
-        //     ,
-        // {
-        //     headers: {
-        //         authorization: basicAuthHeader
-        //     }
-        //     }
+            ,
+        {
+            headers: {
+                authorization: playerAuthHeader()
+            }
+            }
             );
     }
 
-    // executeHelloWorldPathVariableService(user) {
-    //     console.log('executed path variable')
-    //     let username = 'Dani'
-    //     let password = '1234'
-    //
-    //     let basicAuthHeader = 'Basic ' + window.btoa(username + ":" + password)
-    //
-    //     return axios.get(`http://localhost:8081/welcome/${user}`,
-    //         {
-    //             headers: {
-    //                 authorization: basicAuthHeader
-    //             }
-    //         });
-    // }
+    executeHelloWorldPathVariableService(user) {
+        console.log('executed path variable')
+        // let username = 'Dani'
+        // let password = '1234'
+        //
+        // let basicAuthHeader = 'Basic ' + window.btoa(username + ":" + password)
+
+        return axios.get(`http://localhost:8081/welcome/${user}`
+            // ,
+            // {
+            //     headers: {
+            //         authorization: basicAuthHeader
+            //     }
+            // }
+            );
+    }
 }
 
 export default new WelcomeDataService();
\ No newline at end of file
Index: package.json
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>{\r\n  \"name\": \"poker-club\",\r\n  \"version\": \"0.1.0\",\r\n  \"private\": true,\r\n  \"dependencies\": {\r\n    \"@testing-library/jest-dom\": \"^5.12.0\",\r\n    \"@testing-library/react\": \"^11.2.7\",\r\n    \"@testing-library/user-event\": \"^12.8.3\",\r\n    \"axios\": \"^0.21.1\",\r\n    \"bootstrap\": \"^4.1.1\",\r\n    \"font-awesome\": \"^4.7.0\",\r\n    \"formik\": \"^2.2.9\",\r\n    \"moment\": \"^2.29.1\",\r\n    \"node-sass\": \"^4.14.1\",\r\n    \"react\": \"^17.0.2\",\r\n    \"react-bootstrap\": \"^1.5.2\",\r\n    \"react-dom\": \"^17.0.2\",\r\n    \"react-router\": \"^5.2.0\",\r\n    \"react-router-dom\": \"^5.2.0\",\r\n    \"react-scripts\": \"4.0.3\",\r\n    \"web-vitals\": \"^1.1.2\"\r\n  },\r\n  \"scripts\": {\r\n    \"start\": \"SET PORT=4000 && react-scripts start\",\r\n    \"build\": \"react-scripts build\",\r\n    \"test\": \"react-scripts test\",\r\n    \"eject\": \"react-scripts eject\"\r\n  },\r\n  \"eslintConfig\": {\r\n    \"extends\": [\r\n      \"react-app\",\r\n      \"react-app/jest\"\r\n    ]\r\n  },\r\n  \"browserslist\": {\r\n    \"production\": [\r\n      \">0.2%\",\r\n      \"not dead\",\r\n      \"not op_mini all\"\r\n    ],\r\n    \"development\": [\r\n      \"last 1 chrome version\",\r\n      \"last 1 firefox version\",\r\n      \"last 1 safari version\"\r\n    ]\r\n  },\r\n  \"devDependencies\": {\r\n    \"prop-types\": \"^15.7.2\"\r\n  }\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/package.json b/package.json
--- a/package.json	
+++ b/package.json	
@@ -15,9 +15,12 @@
     "react": "^17.0.2",
     "react-bootstrap": "^1.5.2",
     "react-dom": "^17.0.2",
+    "react-form-with-constraints-bootstrap4": "^0.16.1",
     "react-router": "^5.2.0",
     "react-router-dom": "^5.2.0",
     "react-scripts": "4.0.3",
+    "react-validation": "^3.0.7",
+    "validator": "^13.6.0",
     "web-vitals": "^1.1.2"
   },
   "scripts": {
Index: .idea/workspace.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n<project version=\"4\">\r\n  <component name=\"AutoImportSettings\">\r\n    <option name=\"autoReloadType\" value=\"SELECTIVE\" />\r\n  </component>\r\n  <component name=\"ChangeListManager\">\r\n    <list default=\"true\" id=\"2307688c-85a4-477c-9157-0f1b5423bb45\" name=\"Default Changelist\" comment=\"\">\r\n      <change beforePath=\"$PROJECT_DIR$/.idea/workspace.xml\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/.idea/workspace.xml\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/src/components/clubs/ClubLogin.jsx\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/src/components/clubs/ClubLogin.jsx\" afterDir=\"false\" />\r\n    </list>\r\n    <option name=\"SHOW_DIALOG\" value=\"false\" />\r\n    <option name=\"HIGHLIGHT_CONFLICTS\" value=\"true\" />\r\n    <option name=\"HIGHLIGHT_NON_ACTIVE_CHANGELIST\" value=\"false\" />\r\n    <option name=\"LAST_RESOLUTION\" value=\"IGNORE\" />\r\n  </component>\r\n  <component name=\"Git.Settings\">\r\n    <option name=\"RECENT_GIT_ROOT_PATH\" value=\"$PROJECT_DIR$\" />\r\n  </component>\r\n  <component name=\"ProjectId\" id=\"1oYqQ6EKw47fnXbH6LtJxD0aBz1\" />\r\n  <component name=\"ProjectViewState\">\r\n    <option name=\"hideEmptyMiddlePackages\" value=\"true\" />\r\n    <option name=\"showLibraryContents\" value=\"true\" />\r\n  </component>\r\n  <component name=\"PropertiesComponent\">\r\n    <property name=\"RunOnceActivity.OpenProjectViewOnStart\" value=\"true\" />\r\n    <property name=\"RunOnceActivity.ShowReadmeOnStart\" value=\"true\" />\r\n    <property name=\"SHARE_PROJECT_CONFIGURATION_FILES\" value=\"true\" />\r\n    <property name=\"WebServerToolWindowFactoryState\" value=\"false\" />\r\n    <property name=\"aspect.path.notification.shown\" value=\"true\" />\r\n    <property name=\"last_opened_file_path\" value=\"$PROJECT_DIR$/src\" />\r\n    <property name=\"node.js.detected.package.eslint\" value=\"true\" />\r\n    <property name=\"node.js.detected.package.standard\" value=\"true\" />\r\n    <property name=\"node.js.detected.package.tslint\" value=\"true\" />\r\n    <property name=\"node.js.path.for.package.eslint\" value=\"project\" />\r\n    <property name=\"node.js.path.for.package.tslint\" value=\"project\" />\r\n    <property name=\"node.js.selected.package.eslint\" value=\"(autodetect)\" />\r\n    <property name=\"node.js.selected.package.standard\" value=\"\" />\r\n    <property name=\"node.js.selected.package.tslint\" value=\"(autodetect)\" />\r\n    <property name=\"nodejs_package_manager_path\" value=\"npm\" />\r\n    <property name=\"settings.editor.selected.configurable\" value=\"editor.preferences.fonts.default\" />\r\n  </component>\r\n  <component name=\"RecentsManager\">\r\n    <key name=\"CopyFile.RECENT_KEYS\">\r\n      <recent name=\"C:\\Users\\Dani\\Desktop\\ADVANCED JAVA\\PokerClub\\poker-club-frontend\\src\" />\r\n      <recent name=\"C:\\Users\\Dani\\Desktop\\ADVANCED JAVA\\PokerClub\\poker-club-frontend\\src\\api\\services\" />\r\n      <recent name=\"C:\\Users\\Dani\\Desktop\\ADVANCED JAVA\\PokerClub\\poker-club\\public\" />\r\n      <recent name=\"C:\\Users\\Dani\\Desktop\\ADVANCED JAVA\\PokerClub\\poker-club\\src\\components\" />\r\n      <recent name=\"C:\\Users\\Dani\\Desktop\\ADVANCED JAVA\\PokerClub\\poker-club\\src\" />\r\n    </key>\r\n    <key name=\"MoveFile.RECENT_KEYS\">\r\n      <recent name=\"C:\\Users\\Dani\\Desktop\\ADVANCED JAVA\\PokerClub\\poker-club\\src\\components\\pages\" />\r\n      <recent name=\"C:\\Users\\Dani\\Desktop\\ADVANCED JAVA\\PokerClub\\poker-club\\src\\components\\players\" />\r\n      <recent name=\"C:\\Users\\Dani\\Desktop\\ADVANCED JAVA\\PokerClub\\poker-club\\src\\components\\games\" />\r\n      <recent name=\"C:\\Users\\Dani\\Desktop\\ADVANCED JAVA\\PokerClub\\poker-club\\src\\components\\clubs\" />\r\n      <recent name=\"C:\\Users\\Dani\\Desktop\\ADVANCED JAVA\\PokerClub\\poker-club\\src\\api\\clubs\" />\r\n    </key>\r\n  </component>\r\n  <component name=\"SpellCheckerSettings\" RuntimeDictionaries=\"0\" Folders=\"0\" CustomDictionaries=\"0\" DefaultDictionary=\"application-level\" UseSingleDictionary=\"true\" transferred=\"true\" />\r\n  <component name=\"TaskManager\">\r\n    <task active=\"true\" id=\"Default\" summary=\"Default task\">\r\n      <changelist id=\"2307688c-85a4-477c-9157-0f1b5423bb45\" name=\"Default Changelist\" comment=\"\" />\r\n      <created>1613473869090</created>\r\n      <option name=\"number\" value=\"Default\" />\r\n      <option name=\"presentableId\" value=\"Default\" />\r\n      <updated>1613473869090</updated>\r\n      <workItem from=\"1613473886378\" duration=\"1144000\" />\r\n      <workItem from=\"1613475313729\" duration=\"14235000\" />\r\n      <workItem from=\"1619151077003\" duration=\"4555000\" />\r\n      <workItem from=\"1620315608665\" duration=\"12443000\" />\r\n      <workItem from=\"1620915673236\" duration=\"1087000\" />\r\n      <workItem from=\"1622707298674\" duration=\"364000\" />\r\n      <workItem from=\"1622786059493\" duration=\"11128000\" />\r\n      <workItem from=\"1626257819529\" duration=\"24033000\" />\r\n      <workItem from=\"1626289474419\" duration=\"682000\" />\r\n      <workItem from=\"1626328757016\" duration=\"27099000\" />\r\n      <workItem from=\"1626416051368\" duration=\"3071000\" />\r\n      <workItem from=\"1629112655260\" duration=\"8478000\" />\r\n      <workItem from=\"1629198146016\" duration=\"25300000\" />\r\n      <workItem from=\"1629358763284\" duration=\"10795000\" />\r\n      <workItem from=\"1629439924259\" duration=\"3633000\" />\r\n      <workItem from=\"1630565166284\" duration=\"24870000\" />\r\n      <workItem from=\"1630643641024\" duration=\"4132000\" />\r\n      <workItem from=\"1630917116141\" duration=\"1850000\" />\r\n      <workItem from=\"1631087289739\" duration=\"1873000\" />\r\n      <workItem from=\"1631091521259\" duration=\"25107000\" />\r\n      <workItem from=\"1631178332727\" duration=\"2974000\" />\r\n      <workItem from=\"1631191000585\" duration=\"2402000\" />\r\n      <workItem from=\"1631199249037\" duration=\"1894000\" />\r\n      <workItem from=\"1631204635102\" duration=\"1308000\" />\r\n      <workItem from=\"1631217444647\" duration=\"834000\" />\r\n      <workItem from=\"1631256034466\" duration=\"4077000\" />\r\n      <workItem from=\"1631277105150\" duration=\"760000\" />\r\n      <workItem from=\"1631512803663\" duration=\"25842000\" />\r\n      <workItem from=\"1631598888628\" duration=\"12181000\" />\r\n      <workItem from=\"1631678717770\" duration=\"1312000\" />\r\n      <workItem from=\"1631848448271\" duration=\"4081000\" />\r\n    </task>\r\n    <servers />\r\n  </component>\r\n  <component name=\"TypeScriptGeneratedFilesManager\">\r\n    <option name=\"version\" value=\"3\" />\r\n  </component>\r\n  <component name=\"Vcs.Log.Tabs.Properties\">\r\n    <option name=\"TAB_STATES\">\r\n      <map>\r\n        <entry key=\"MAIN\">\r\n          <value>\r\n            <State />\r\n          </value>\r\n        </entry>\r\n      </map>\r\n    </option>\r\n    <option name=\"oldMeFiltersMigrated\" value=\"true\" />\r\n  </component>\r\n</project>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/workspace.xml b/.idea/workspace.xml
--- a/.idea/workspace.xml	
+++ b/.idea/workspace.xml	
@@ -5,8 +5,27 @@
   </component>
   <component name="ChangeListManager">
     <list default="true" id="2307688c-85a4-477c-9157-0f1b5423bb45" name="Default Changelist" comment="">
+      <change beforePath="$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Checkout_at_22_09_2021_12_58__Default_Changelist_.xml" beforeDir="false" />
+      <change beforePath="$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Checkout_at_22_09_2021_13_07__Default_Changelist_.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Checkout_at_22_09_2021_13_07__Default_Changelist_.xml" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Checkout_at_22_09_2021_13_09__Default_Changelist_.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Checkout_at_22_09_2021_13_09__Default_Changelist_.xml" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Checkout_at_22_09_2021_13_28__Default_Changelist_.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Checkout_at_22_09_2021_13_28__Default_Changelist_.xml" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Checkout_at_22_09_2021_13_28__Default_Changelist_1.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Checkout_at_22_09_2021_13_28__Default_Changelist_1.xml" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Checkout_at_22_09_2021_14_17__Default_Changelist_.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Checkout_at_22_09_2021_14_17__Default_Changelist_.xml" afterDir="false" />
       <change beforePath="$PROJECT_DIR$/.idea/workspace.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/workspace.xml" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/package-lock.json" beforeDir="false" afterPath="$PROJECT_DIR$/package-lock.json" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/package.json" beforeDir="false" afterPath="$PROJECT_DIR$/package.json" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/src/api/services/AuthenticationServiceJwt.js" beforeDir="false" afterPath="$PROJECT_DIR$/src/api/services/AuthenticationServiceJwt.js" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/src/api/services/PlayersDataService.js" beforeDir="false" afterPath="$PROJECT_DIR$/src/api/services/PlayersDataService.js" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/src/api/services/WelcomeDataService.js" beforeDir="false" afterPath="$PROJECT_DIR$/src/api/services/WelcomeDataService.js" afterDir="false" />
       <change beforePath="$PROJECT_DIR$/src/components/clubs/ClubLogin.jsx" beforeDir="false" afterPath="$PROJECT_DIR$/src/components/clubs/ClubLogin.jsx" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/src/components/clubs/ClubsList.jsx" beforeDir="false" afterPath="$PROJECT_DIR$/src/components/clubs/ClubsList.jsx" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/src/components/pages/AuthenticatedRoute.jsx" beforeDir="false" afterPath="$PROJECT_DIR$/src/components/pages/AuthenticatedRoute.jsx" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/src/components/pages/Header.jsx" beforeDir="false" afterPath="$PROJECT_DIR$/src/components/pages/Header.jsx" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/src/components/pages/Welcome.jsx" beforeDir="false" afterPath="$PROJECT_DIR$/src/components/pages/Welcome.jsx" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/src/components/players/PlayerAccount.jsx" beforeDir="false" afterPath="$PROJECT_DIR$/src/components/players/PlayerAccount.jsx" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/src/components/players/PlayerDetailsPage.jsx" beforeDir="false" afterPath="$PROJECT_DIR$/src/components/players/PlayerDetailsPage.jsx" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/src/components/players/PlayerLogin.jsx" beforeDir="false" afterPath="$PROJECT_DIR$/src/components/players/PlayerLogin.jsx" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/src/components/players/PlayerRegister.jsx" beforeDir="false" afterPath="$PROJECT_DIR$/src/components/players/PlayerRegister.jsx" afterDir="false" />
     </list>
     <option name="SHOW_DIALOG" value="false" />
     <option name="HIGHLIGHT_CONFLICTS" value="true" />
@@ -14,6 +33,11 @@
     <option name="LAST_RESOLUTION" value="IGNORE" />
   </component>
   <component name="Git.Settings">
+    <option name="RECENT_BRANCH_BY_REPOSITORY">
+      <map>
+        <entry key="$PROJECT_DIR$" value="master" />
+      </map>
+    </option>
     <option name="RECENT_GIT_ROOT_PATH" value="$PROJECT_DIR$" />
   </component>
   <component name="ProjectId" id="1oYqQ6EKw47fnXbH6LtJxD0aBz1" />
@@ -91,9 +115,10 @@
       <workItem from="1631256034466" duration="4077000" />
       <workItem from="1631277105150" duration="760000" />
       <workItem from="1631512803663" duration="25842000" />
-      <workItem from="1631598888628" duration="12181000" />
-      <workItem from="1631678717770" duration="1312000" />
-      <workItem from="1631848448271" duration="4081000" />
+      <workItem from="1631598888628" duration="11479000" />
+      <workItem from="1632399835529" duration="13891000" />
+      <workItem from="1632416121919" duration="7252000" />
+      <workItem from="1632453221178" duration="10940000" />
     </task>
     <servers />
   </component>
Index: package-lock.json
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/package-lock.json b/package-lock.json
--- a/package-lock.json	
+++ b/package-lock.json	
@@ -5,6 +5,7 @@
   "requires": true,
   "packages": {
     "": {
+      "name": "poker-club",
       "version": "0.1.0",
       "dependencies": {
         "@testing-library/jest-dom": "^5.12.0",
@@ -19,9 +20,12 @@
         "react": "^17.0.2",
         "react-bootstrap": "^1.5.2",
         "react-dom": "^17.0.2",
+        "react-form-with-constraints-bootstrap4": "^0.16.1",
         "react-router": "^5.2.0",
         "react-router-dom": "^5.2.0",
         "react-scripts": "4.0.3",
+        "react-validation": "^3.0.7",
+        "validator": "^13.6.0",
         "web-vitals": "^1.1.2"
       },
       "devDependencies": {
@@ -12948,6 +12952,11 @@
       "resolved": "https://registry.npmjs.org/lodash.memoize/-/lodash.memoize-4.1.2.tgz",
       "integrity": "sha1-vMbEmkKihA7Zl/Mj6tpezRguC/4="
     },
+    "node_modules/lodash.omit": {
+      "version": "4.5.0",
+      "resolved": "https://registry.npmjs.org/lodash.omit/-/lodash.omit-4.5.0.tgz",
+      "integrity": "sha1-brGa5aHuHdnfC5aeZs4Lf6MLXmA="
+    },
     "node_modules/lodash.sortby": {
       "version": "4.7.0",
       "resolved": "https://registry.npmjs.org/lodash.sortby/-/lodash.sortby-4.7.0.tgz",
@@ -16771,6 +16780,27 @@
       "resolved": "https://registry.npmjs.org/react-fast-compare/-/react-fast-compare-2.0.4.tgz",
       "integrity": "sha512-suNP+J1VU1MWFKcyt7RtjiSWUjvidmQSlqu+eHslq+342xCbGTYmC0mEhPCOHxlW0CywylOC1u2DFAT+bv4dBw=="
     },
+    "node_modules/react-form-with-constraints": {
+      "version": "0.16.1",
+      "resolved": "https://registry.npmjs.org/react-form-with-constraints/-/react-form-with-constraints-0.16.1.tgz",
+      "integrity": "sha512-SWlErEffFTYdW8BoFYAs4rn2PSmbAylLKNgYzh2/cMZYetSy4pM7MDMMVoy1+GOMuI4jc1axdNSH5MF0LUrGFQ==",
+      "peer": true,
+      "dependencies": {
+        "prop-types": "^15.7.2"
+      },
+      "peerDependencies": {
+        "react": ">=16"
+      }
+    },
+    "node_modules/react-form-with-constraints-bootstrap4": {
+      "version": "0.16.1",
+      "resolved": "https://registry.npmjs.org/react-form-with-constraints-bootstrap4/-/react-form-with-constraints-bootstrap4-0.16.1.tgz",
+      "integrity": "sha512-ayuGiel/WTuavgEtX71TcRlA9hG+r/W5+2zum4w2Y1Qq2yMf3I2HbcsABkl/0uACfdAeuVGKJHpuS3uE+HjGXw==",
+      "deprecated": "Use react-form-with-constraints-bootstrap instead",
+      "peerDependencies": {
+        "react-form-with-constraints": "^0.16.0"
+      }
+    },
     "node_modules/react-is": {
       "version": "17.0.1",
       "resolved": "https://registry.npmjs.org/react-is/-/react-is-17.0.1.tgz",
@@ -16969,6 +16999,40 @@
         "react-dom": ">=16.6.0"
       }
     },
+    "node_modules/react-validation": {
+      "version": "3.0.7",
+      "resolved": "https://registry.npmjs.org/react-validation/-/react-validation-3.0.7.tgz",
+      "integrity": "sha1-tQcL+KbnN7hw2Hu/tyzMpys/N1A=",
+      "dependencies": {
+        "lodash.omit": "^4.5.0",
+        "prop-types": "^15.6.0",
+        "react": "^16.0.0",
+        "shallow-equal": "^1.0.0",
+        "uuid": "^3.1.0"
+      }
+    },
+    "node_modules/react-validation/node_modules/react": {
+      "version": "16.14.0",
+      "resolved": "https://registry.npmjs.org/react/-/react-16.14.0.tgz",
+      "integrity": "sha512-0X2CImDkJGApiAlcf0ODKIneSwBPhqJawOa5wCtKbu7ZECrmS26NvtSILynQ66cgkT/RJ4LidJOc3bUESwmU8g==",
+      "dependencies": {
+        "loose-envify": "^1.1.0",
+        "object-assign": "^4.1.1",
+        "prop-types": "^15.6.2"
+      },
+      "engines": {
+        "node": ">=0.10.0"
+      }
+    },
+    "node_modules/react-validation/node_modules/uuid": {
+      "version": "3.4.0",
+      "resolved": "https://registry.npmjs.org/uuid/-/uuid-3.4.0.tgz",
+      "integrity": "sha512-HjSDRw6gZE5JMggctHBcjVak08+KEVhSIiDzFnT9S9aegmp85S/bReBVTb4QTFaRNptJ9kuYaNhnbNEOkbKb/A==",
+      "deprecated": "Please upgrade  to version 7 or higher.  Older versions may use Math.random() in certain circumstances, which is known to be problematic.  See https://v8.dev/blog/math-random for details.",
+      "bin": {
+        "uuid": "bin/uuid"
+      }
+    },
     "node_modules/read-pkg": {
       "version": "2.0.0",
       "resolved": "https://registry.npmjs.org/read-pkg/-/read-pkg-2.0.0.tgz",
@@ -18528,6 +18592,11 @@
         "sha.js": "bin.js"
       }
     },
+    "node_modules/shallow-equal": {
+      "version": "1.2.1",
+      "resolved": "https://registry.npmjs.org/shallow-equal/-/shallow-equal-1.2.1.tgz",
+      "integrity": "sha512-S4vJDjHHMBaiZuT9NPb616CSmLf618jawtv3sufLl6ivK8WocjAo58cXwbRV1cgqxH0Qbv+iUt6m05eqEa2IRA=="
+    },
     "node_modules/shebang-command": {
       "version": "2.0.0",
       "resolved": "https://registry.npmjs.org/shebang-command/-/shebang-command-2.0.0.tgz",
@@ -20600,6 +20669,14 @@
         "spdx-expression-parse": "^3.0.0"
       }
     },
+    "node_modules/validator": {
+      "version": "13.6.0",
+      "resolved": "https://registry.npmjs.org/validator/-/validator-13.6.0.tgz",
+      "integrity": "sha512-gVgKbdbHgtxpRyR8K0O6oFZPhhB5tT1jeEHZR0Znr9Svg03U0+r9DXWMrnRAB+HtCStDQKlaIZm42tVsVjqtjg==",
+      "engines": {
+        "node": ">= 0.10"
+      }
+    },
     "node_modules/value-equal": {
       "version": "1.0.1",
       "resolved": "https://registry.npmjs.org/value-equal/-/value-equal-1.0.1.tgz",
@@ -32615,6 +32692,11 @@
       "resolved": "https://registry.npmjs.org/lodash.memoize/-/lodash.memoize-4.1.2.tgz",
       "integrity": "sha1-vMbEmkKihA7Zl/Mj6tpezRguC/4="
     },
+    "lodash.omit": {
+      "version": "4.5.0",
+      "resolved": "https://registry.npmjs.org/lodash.omit/-/lodash.omit-4.5.0.tgz",
+      "integrity": "sha1-brGa5aHuHdnfC5aeZs4Lf6MLXmA="
+    },
     "lodash.sortby": {
       "version": "4.7.0",
       "resolved": "https://registry.npmjs.org/lodash.sortby/-/lodash.sortby-4.7.0.tgz",
@@ -35670,6 +35752,21 @@
       "resolved": "https://registry.npmjs.org/react-fast-compare/-/react-fast-compare-2.0.4.tgz",
       "integrity": "sha512-suNP+J1VU1MWFKcyt7RtjiSWUjvidmQSlqu+eHslq+342xCbGTYmC0mEhPCOHxlW0CywylOC1u2DFAT+bv4dBw=="
     },
+    "react-form-with-constraints": {
+      "version": "0.16.1",
+      "resolved": "https://registry.npmjs.org/react-form-with-constraints/-/react-form-with-constraints-0.16.1.tgz",
+      "integrity": "sha512-SWlErEffFTYdW8BoFYAs4rn2PSmbAylLKNgYzh2/cMZYetSy4pM7MDMMVoy1+GOMuI4jc1axdNSH5MF0LUrGFQ==",
+      "peer": true,
+      "requires": {
+        "prop-types": "^15.7.2"
+      }
+    },
+    "react-form-with-constraints-bootstrap4": {
+      "version": "0.16.1",
+      "resolved": "https://registry.npmjs.org/react-form-with-constraints-bootstrap4/-/react-form-with-constraints-bootstrap4-0.16.1.tgz",
+      "integrity": "sha512-ayuGiel/WTuavgEtX71TcRlA9hG+r/W5+2zum4w2Y1Qq2yMf3I2HbcsABkl/0uACfdAeuVGKJHpuS3uE+HjGXw==",
+      "requires": {}
+    },
     "react-is": {
       "version": "17.0.1",
       "resolved": "https://registry.npmjs.org/react-is/-/react-is-17.0.1.tgz",
@@ -35838,6 +35935,35 @@
         "prop-types": "^15.6.2"
       }
     },
+    "react-validation": {
+      "version": "3.0.7",
+      "resolved": "https://registry.npmjs.org/react-validation/-/react-validation-3.0.7.tgz",
+      "integrity": "sha1-tQcL+KbnN7hw2Hu/tyzMpys/N1A=",
+      "requires": {
+        "lodash.omit": "^4.5.0",
+        "prop-types": "^15.6.0",
+        "react": "^16.0.0",
+        "shallow-equal": "^1.0.0",
+        "uuid": "^3.1.0"
+      },
+      "dependencies": {
+        "react": {
+          "version": "16.14.0",
+          "resolved": "https://registry.npmjs.org/react/-/react-16.14.0.tgz",
+          "integrity": "sha512-0X2CImDkJGApiAlcf0ODKIneSwBPhqJawOa5wCtKbu7ZECrmS26NvtSILynQ66cgkT/RJ4LidJOc3bUESwmU8g==",
+          "requires": {
+            "loose-envify": "^1.1.0",
+            "object-assign": "^4.1.1",
+            "prop-types": "^15.6.2"
+          }
+        },
+        "uuid": {
+          "version": "3.4.0",
+          "resolved": "https://registry.npmjs.org/uuid/-/uuid-3.4.0.tgz",
+          "integrity": "sha512-HjSDRw6gZE5JMggctHBcjVak08+KEVhSIiDzFnT9S9aegmp85S/bReBVTb4QTFaRNptJ9kuYaNhnbNEOkbKb/A=="
+        }
+      }
+    },
     "read-pkg": {
       "version": "2.0.0",
       "resolved": "https://registry.npmjs.org/read-pkg/-/read-pkg-2.0.0.tgz",
@@ -37063,6 +37189,11 @@
         "safe-buffer": "^5.0.1"
       }
     },
+    "shallow-equal": {
+      "version": "1.2.1",
+      "resolved": "https://registry.npmjs.org/shallow-equal/-/shallow-equal-1.2.1.tgz",
+      "integrity": "sha512-S4vJDjHHMBaiZuT9NPb616CSmLf618jawtv3sufLl6ivK8WocjAo58cXwbRV1cgqxH0Qbv+iUt6m05eqEa2IRA=="
+    },
     "shebang-command": {
       "version": "2.0.0",
       "resolved": "https://registry.npmjs.org/shebang-command/-/shebang-command-2.0.0.tgz",
@@ -38721,6 +38852,11 @@
         "spdx-expression-parse": "^3.0.0"
       }
     },
+    "validator": {
+      "version": "13.6.0",
+      "resolved": "https://registry.npmjs.org/validator/-/validator-13.6.0.tgz",
+      "integrity": "sha512-gVgKbdbHgtxpRyR8K0O6oFZPhhB5tT1jeEHZR0Znr9Svg03U0+r9DXWMrnRAB+HtCStDQKlaIZm42tVsVjqtjg=="
+    },
     "value-equal": {
       "version": "1.0.1",
       "resolved": "https://registry.npmjs.org/value-equal/-/value-equal-1.0.1.tgz",
Index: src/components/pages/AuthenticatedRoute.jsx
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>import React, {Component} from \"react\";\r\nimport AuthenticationService from \"../../api/services/AuthenticationService.js\";\r\nimport {Redirect, Route} from \"react-router-dom\";\r\n\r\nclass AuthenticatedRoute extends Component {\r\n    render() {\r\n        if (AuthenticationService.isUserLoggedIn() || AuthenticationService.isClubLoggedIn()){\r\n           return <Route {...this.props}/>\r\n        }else {\r\n           return <Redirect to=\"/\" />\r\n        }\r\n    }\r\n}\r\n\r\nexport default AuthenticatedRoute
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/components/pages/AuthenticatedRoute.jsx b/src/components/pages/AuthenticatedRoute.jsx
--- a/src/components/pages/AuthenticatedRoute.jsx	
+++ b/src/components/pages/AuthenticatedRoute.jsx	
@@ -1,10 +1,11 @@
 import React, {Component} from "react";
 import AuthenticationService from "../../api/services/AuthenticationService.js";
 import {Redirect, Route} from "react-router-dom";
+import AuthenticationServiceJwt from "../../api/services/AuthenticationServiceJwt";
 
 class AuthenticatedRoute extends Component {
     render() {
-        if (AuthenticationService.isUserLoggedIn() || AuthenticationService.isClubLoggedIn()){
+        if (AuthenticationServiceJwt.isUserLoggedIn() || AuthenticationServiceJwt.isClubLoggedIn()){
            return <Route {...this.props}/>
         }else {
            return <Redirect to="/" />
Index: src/components/clubs/ClubsList.jsx
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>import React, {Component} from \"react\";\r\nimport ClubsDataService from \"../../api/services/ClubsDataService\";\r\n\r\nclass ClubsList extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            clubs: []\r\n            // {\r\n            // clubUsername: 'Poker Club',\r\n            // description: 'Important info',\r\n            // address: 'Bucharest',\r\n            // phoneNumber: '+04058963217'\r\n            // }\r\n        }\r\n\r\n        this.refreshClubs = this.refreshClubs.bind(this)\r\n        this.infoClubClicked = this.infoClubClicked.bind(this)\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.refreshClubs();\r\n    }\r\n\r\n    refreshClubs() {\r\n        ClubsDataService.retrieveAllClubs()\r\n            .then(\r\n                response => {\r\n                    console.log(response)\r\n                    this.setState({clubs : response.data})\r\n                }\r\n            )\r\n    }\r\n\r\n    infoClubClicked(clubName) {\r\n        // this.refreshClubs();\r\n        console.log(\"This is the id: \" + clubName)\r\n        this.props.history.push(`/clubs/${clubName}`)\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <h3 className=\"card-header\">List of Poker Clubs</h3>\r\n                    {this.state.clubs.map(\r\n                            club =>\r\n                    <div className=\"container\" key={club.id}>\r\n                        <h5 className=\"card-header\">{club.clubUsername}  Poker Club</h5>\r\n                        <div className=\"card-body\">\r\n                            <h5 className=\"card-title\">Country: {club.country}</h5>\r\n                            <h5>City: {club.city}</h5>\r\n                            <p className=\"card-text\">Address: {club.address}</p>\r\n                            <p className=\"card-text\">Phone: {club.phoneNumber}</p>\r\n                            <button className=\"btn btn-success btn-primary\"\r\n                                onClick={() => this.infoClubClicked(club.clubUsername)}\r\n                            >\r\n                                Details\r\n                            </button>\r\n                        </div>\r\n                    </div>\r\n\r\n                                    // <form key={club.id}>\r\n                                    //     <h4>{club.clubUsername}  Poker Club</h4>\r\n                                    //     <h6>Country: {club.country}; City: {club.city}</h6>\r\n                                    //     <p>Address: {club.address}</p>\r\n                                    //     <p>Phone: {club.phoneNumber}</p>\r\n                                    //     <button className=\"btn btn-success\">Details</button>\r\n                                    // </form>\r\n                                )}\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default ClubsList
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/components/clubs/ClubsList.jsx b/src/components/clubs/ClubsList.jsx
--- a/src/components/clubs/ClubsList.jsx	
+++ b/src/components/clubs/ClubsList.jsx	
@@ -45,7 +45,7 @@
                 <h3 className="card-header">List of Poker Clubs</h3>
                     {this.state.clubs.map(
                             club =>
-                    <div className="container" key={club.id}>
+                    <div className="container" key={club.id} style={{display: "inline-block"}}>
                         <h5 className="card-header">{club.clubUsername}  Poker Club</h5>
                         <div className="card-body">
                             <h5 className="card-title">Country: {club.country}</h5>
